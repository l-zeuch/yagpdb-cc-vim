# Autoload Tests: Utility

# Copyright (C) 2023    Lucas Ritzdorf, Luca Zeuch

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Language: YAGPDB Custom Commands
# Maintainer: Luca Zeuch <l-zeuch@email.de>,
#   LRitzdorf <42657792+LRitzdorf@users.noreply.github.com>

# Available syntax functions are:
#   SyntaxAt(): current cursor position
#   SyntaxAt(col): current cursor line, at given column
#   SyntaxAt(lnum, col): line and column
#   SyntaxOf(pattern[, nth=1]): return a string with the name of the syntax
#     group at the first character of the nth match of the given pattern. Return
#     '' if there was no match.

Before:
  source ../autoload/yagpdbcc/util.vim

After:
  Restore

Execute (yagpdbcc#util#PathSep()):
  if has('win32')
    AssertEqual '\', yagpdbcc#util#PathSep()
  else
    AssertEqual '/', yagpdbcc#util#PathSep()
  endif

# TODO: Figure out a way to properly test this.
#       Perhaps it may be worthwhile to log it via `echom`
#       and perform a search on :messages. This may require
#       changing the called function.
Execute (yagpdbcc#util#Error()):
  call yagpdbcc#util#Error("test")

# TODO: Figure out a way to properly test this.
#       Perhaps it may be worthwhile to log it via `echom`
#       and perform a search on :messages. This may require
#       changing the called function.
Execute (yagpdbcc#util#Warn()):
  call yagpdbcc#util#Warn("test")
